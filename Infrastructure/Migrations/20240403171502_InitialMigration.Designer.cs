// <auto-generated />
using System;
using Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BootcampContext))]
    [Migration("20240403171502_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.Entities.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<string>("Mail")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id")
                        .HasName("Banco_pkey");

                    b.ToTable("Banco", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entities.CajaAhorro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CuentaId")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NombreTarjeta")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TipoDeposito")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id")
                        .HasName("CajaAhorro_pkey");

                    b.HasIndex("CuentaId");

                    b.ToTable("CajaAhorros");
                });

            modelBuilder.Entity("Infrastructure.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int>("BancoId")
                        .HasColumnType("integer");

                    b.Property<string>("Celular")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<string>("Documento")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Estado")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Mail")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.HasKey("Id")
                        .HasName("Cliente_pkey");

                    b.HasIndex("BancoId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Infrastructure.Entities.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<string>("NumeroCuenta")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Saldo")
                        .HasPrecision(20, 5)
                        .HasColumnType("numeric(20,5)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Titular")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.HasKey("Id")
                        .HasName("Cuenta_pkey");

                    b.HasIndex("ClienteId");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("Infrastructure.Entities.CuentaCorriente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CuentaId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("InteresMantenimiento")
                        .HasPrecision(10, 5)
                        .HasColumnType("numeric(10,5)");

                    b.Property<decimal?>("LimiteOperacional")
                        .HasPrecision(20, 5)
                        .HasColumnType("numeric(20,5)");

                    b.Property<decimal?>("PromedioMensual")
                        .HasPrecision(20, 5)
                        .HasColumnType("numeric(20,5)");

                    b.HasKey("Id")
                        .HasName("CuentaCorriente_pkey");

                    b.HasIndex("CuentaId");

                    b.ToTable("CuentaCorrientes");
                });

            modelBuilder.Entity("Infrastructure.Entities.Movimientos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CuentaDestino")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("CuentaId")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("FechaHora")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("MontoTransaccion")
                        .HasPrecision(20, 5)
                        .HasColumnType("numeric(20,5)");

                    b.Property<string>("TipoOperacion")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id")
                        .HasName("Movimientos_pkey");

                    b.HasIndex("CuentaId");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("Infrastructure.Entities.CajaAhorro", b =>
                {
                    b.HasOne("Infrastructure.Entities.Cuenta", "Cuenta")
                        .WithMany("CajaAhorro")
                        .HasForeignKey("CuentaId")
                        .IsRequired()
                        .HasConstraintName("CajaAhorro_CuentaId_fkey");

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("Infrastructure.Entities.Cliente", b =>
                {
                    b.HasOne("Infrastructure.Entities.Banco", "Banco")
                        .WithMany("Cliente")
                        .HasForeignKey("BancoId")
                        .IsRequired()
                        .HasConstraintName("Cliente_BancoId_fkey");

                    b.Navigation("Banco");
                });

            modelBuilder.Entity("Infrastructure.Entities.Cuenta", b =>
                {
                    b.HasOne("Infrastructure.Entities.Cliente", "Cliente")
                        .WithMany("Cuenta")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("Cuenta_ClienteId_fkey");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Infrastructure.Entities.CuentaCorriente", b =>
                {
                    b.HasOne("Infrastructure.Entities.Cuenta", "Cuenta")
                        .WithMany("CuentaCorriente")
                        .HasForeignKey("CuentaId")
                        .IsRequired()
                        .HasConstraintName("CuentaCorriente_CuentaId_fkey");

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("Infrastructure.Entities.Movimientos", b =>
                {
                    b.HasOne("Infrastructure.Entities.Cuenta", "Cuenta")
                        .WithMany("Movimientos")
                        .HasForeignKey("CuentaId")
                        .IsRequired()
                        .HasConstraintName("Movimientos_CuentaId_fkey");

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("Infrastructure.Entities.Banco", b =>
                {
                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Infrastructure.Entities.Cliente", b =>
                {
                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("Infrastructure.Entities.Cuenta", b =>
                {
                    b.Navigation("CajaAhorro");

                    b.Navigation("CuentaCorriente");

                    b.Navigation("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
